var gulp = require('gulp')
  , Stream = require('stream').Stream
  , Promise = require('promise')


module.exports = {

	// name , doBefore , fn
	task : function( name , doBefore , fn ){
		

		if( !Array.isArray( doBefore ) )
			doBefore = [ doBefore ]

		if( fn )
			doBefore.push( fn )

		var doBeforeFn = [];
		for( var i=0;i<doBefore.length;i++){

			doBeforeFn[ i ] = []

			if( !Array.isArray( doBefore[ i ] ) )
				doBefore[ i ] = [doBefore[ i ]]

			for(var j=0;j<doBefore[i].length;j++)
				doBeforeFn[ i ][ j ] = typeof doBefore[ i ][ j ] == 'function' ? doBefore[ i ][ j ] : gulp.tasks[  doBefore[ i ][ j ] ].fn
		
		}

		gulp.add( name , null , function(){

			var p = new Promise(function(resolve){
				resolve();
			})

			for( var i=0;i<doBeforeFn.length;i++){

				var ps = []

				for( var j=0;j<doBeforeFn[i].length;j++){

					var value = doBeforeFn[ i ][ j ]()

					if( value instanceof Promise )
						ps.push( value )

					if( value instanceof Stream )
						ps.push( value.toPromise() )
				}

				if( ps.length )
					p.then( Promise.all( ps ) )
			}

			return p;

		})
	},
}